# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy backend to VPS

on:
  # Runs on pushes targeting the default branch
  push:
    branches: [ "main" ]


permissions:
    contents: read
    pages: write
    id-token: write

concurrency:
    group: "deploy"
    cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker Login
        uses: docker/login-action@v3.2.0
        with:
          registry: registry.cn-hangzhou.aliyuncs.com
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: registry.cn-hangzhou.aliyuncs.com/borgor/assistant_backend
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=tag
            type=ref,event=branch

      - name: Publish to Docker.io
        uses: docker/build-push-action@v6.1.0
        with:
          push: true
          no-cache: true
          file: ./build/backend.Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: ssh-scp-ssh-pipelines
        uses: cross-the-world/ssh-scp-ssh-pipelines@v1.1.4
        with:
          host: ${{ secrets.SSH_SERVER }}
          port: 22
          user: ${{ secrets.SSH_USER }}
          pass: ${{ secrets.SSH_PASSWORD }}
          connect_timeout: 10s
          first_ssh: |
            mkdir -p /root/runner/assistant_backend/{data,logs}
          scp: |
            './build/deploy/docker-compose.yml' => /root/runner/assistant_backend/
            './build/deploy/run_docker.sh' => /root/runner/assistant_backend/
          last_ssh: |
            bash /root/runner/assistant_backend/run_docker.sh
